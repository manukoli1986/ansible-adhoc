---
- name: Ensure MariaDB is installed on all VMs
  ansible.builtin.package:
    name: mariadb-server
    state: present

- name: Iterate over each database and perform read/write/delete operations
  block:
    - name: Insert test data into the database
      community.mysql.mysql_query:
        login_user: "{{ db.user }}"
        login_password: "{{ db.password }}"
        login_host: "{{ db.host }}"
        db: "{{ db.name }}"
        query: "CREATE DATABASE IF NOT EXISTS {{ db.name }};"

    - name: Insert a test row into {{ db.name }} on {{ db.host }}
      community.mysql.mysql_query:
        login_user: "{{ db.user }}"
        login_password: "{{ db.password }}"
        login_host: "{{ db.host }}"
        login_unix_socket: "{{ db.login_unix_socket }}"
        db: "{{ db.name }}"
        query: "INSERT INTO {{ db.table }} ({{ db.test_column }}) VALUES ('{{ db.test_data }}');"

    - name: Select the test row from {{ db.name }} on {{ db.host }}
      community.mysql.mysql_query:
        login_user: "{{ db.user }}"
        login_password: "{{ db.password }}"
        login_host: "{{ db.host }}"
        db: "{{ db.name }}"
        query: "SELECT {{ db.test_column }} FROM {{ db.table }} WHERE {{ db.test_column }} = '{{ db.test_data }}';"
      register: query_result

    - name: Verify that the data was inserted correctly in {{ db.name }} on {{ db.host }}
      ansible.builtin.assert:
        that:
          - query_result.rowcount == 1
        fail_msg: "Failed to find the inserted test data in the database {{ db.name }}."

    - name: Delete the test row from {{ db.name }} on {{ db.host }}
      community.mysql.mysql_query:
        login_user: "{{ db.user }}"
        login_password: "{{ db.password }}"
        login_host: "{{ db.host }}"
        db: "{{ db.name }}"
        query: "DELETE FROM {{ db.table }} WHERE {{ db.test_column }} = '{{ db.test_data }}';"

    - name: Verify that the data was deleted from {{ db.name }} on {{ db.host }}
      community.mysql.mysql_query:
        login_user: "{{ db.user }}"
        login_password: "{{ db.password }}"
        login_host: "{{ db.host }}"
        db: "{{ db.name }}"
        query: "SELECT {{ db.test_column }} FROM {{ db.table }} WHERE {{ db.test_column }} = '{{ db.test_data }}';"
      register: delete_check

    - name: Ensure the data was deleted from {{ db.name }} on {{ db.host }}
      ansible.builtin.assert:
        that:
          - delete_check.rowcount == 0
        fail_msg: "Failed to delete the test data from the database {{ db.name }}."
  with_items: "{{ databases }}"
  loop_control:
    loop_var: db
